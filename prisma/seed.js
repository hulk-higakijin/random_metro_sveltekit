import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();

const lines_with_stations = {
  '半蔵門線': ['渋谷', '表参道', '青山一丁目', '永田町', '半蔵門', '九段下', '神保町', '大手町', '三越前', '水天宮前', '清澄白河', '住吉', '錦糸町', '押上'],
  '副都心線': ['和光市', '地下鉄成増', '地下鉄赤塚', '平和台', '氷川台', '小竹向原', '千川', '要町', '池袋', '雑司が谷', '西早稲田', '東新宿', '新宿三丁目', '北参道', '明治神宮前〈原宿〉', '渋谷'],
  '有楽町線': ['和光市', '地下鉄成増', '地下鉄赤塚', '平和台', '氷川台', '小竹向原', '千川', '要町', '池袋', '東池袋', '護国寺', '江戸川橋', '飯田橋', '市ケ谷', '麹町', '永田町', '桜田門', '有楽町', '銀座一丁目', '新富町', '月島', '豊洲', '辰巳', '新木場'],
  '南北線': ['目黒', '白金台', '白金高輪', '麻布十番', '六本木一丁目', '溜池山王', '永田町', '四ツ谷', '市ケ谷', '飯田橋', '後楽園', '東大前', '本駒込', '駒込', '西ケ原', '王子', '王子神谷', '志茂', '赤羽岩淵'],
  '東西線': ['中野', '落合', '高田馬場', '早稲田', '神楽坂', '飯田橋', '九段下', '竹橋', '大手町', '日本橋', '茅場町', '門前仲町', '木場', '東陽町', '南砂町', '西葛西', '葛西', '浦安', '南行徳', '行徳', '妙典', '原木中山', '西船橋'],
  '銀座線': ['渋谷', '表参道', '外苑前', '青山一丁目', '赤坂見附', '溜池山王', '虎ノ門', '新橋', '銀座', '京橋', '日本橋', '三越前', '神田', '末広町', '上野広小路', '上野', '稲荷町', '田原町', '浅草'],
  '千代田線': ['代々木上原', '代々木公園', '明治神宮前〈原宿〉', '表参道', '乃木坂', '赤坂', '国会議事堂前', '霞ケ関', '日比谷', '二重橋前〈丸の内〉', '大手町', '新御茶ノ水', '湯島', '根津', '千駄木', '西日暮里', '町屋', '北千住', '綾瀬', '北綾瀬'],
  '丸の内線': ['荻窪', '南阿佐ケ谷', '新高円寺', '東高円寺', '新中野', '方南町', '中野富士見町', '中野新橋', '中野坂上', '西新宿', '新宿', '新宿三丁目', '新宿御苑前', '四谷三丁目', '四ツ谷', '赤坂見附', '国会議事堂前', '霞ケ関', '銀座', '東京', '大手町', '淡路町', '御茶ノ水', '本郷三丁目', '後楽園', '茗荷谷', '新大塚', '池袋'],
  '日比谷線': ['中目黒', '恵比寿', '広尾', '六本木', '神谷町', '虎ノ門ヒルズ', '霞ケ関', '日比谷', '銀座', '東銀座', '築地', '八丁堀', '茅場町', '人形町', '小伝馬町', '秋葉原', '仲御徒町', '上野', '入谷', '三ノ輪', '南千住', '北千住']
}

const main = async () => {
	const metro = await prisma.company.upsert({
		where: {
			name: '東京メトロ'
		},
		update: {},
		create: {
			name: '東京メトロ'
		}
	});

	for (const [line_name, stations] of Object.entries(lines_with_stations)) {
		let line = await prisma.line.upsert({
			where: {
				name: line_name
			},
			update: {},
			create: {
				name: line_name,
				company: {
					connect: {
						id: metro.id
					}
				}
			}
		})

		for(const station_name of stations) {
			let station = await prisma.station.upsert({
				where: {
					name: station_name
				},
				update: {},
				create: {
					name: station_name
				}
			})

			await prisma.station.update({
				where: {
					id: station.id
				},
				data: {
					lines: {
						connect: {
							id: line.id
						}
					}
				}
			})
		}
	}
};

main()
	.catch((e) => {
		console.error(e);
		process.exit(1);
	})
	.finally(async () => {
		await prisma.$disconnect();
	});
